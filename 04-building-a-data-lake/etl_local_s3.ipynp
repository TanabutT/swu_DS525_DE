{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "7d92a656-8c50-4a3a-a88c-0f1798d8499f",
   "metadata": {},
   "source": [
    "# ELT using PySpark on Local with S3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "143ac16b-0c1a-47fe-996a-a14aae784a3e",
   "metadata": {},
   "outputs": [],
   "source": [
    "from pyspark import SparkConf\n",
    "from pyspark.sql import SparkSession"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e12c2acc-a92d-4dc9-ae8f-99c683d752b2",
   "metadata": {},
   "source": [
    "การที่เราจะเชื่อมต่อไปยัง Amazon S3 เราจำเป็นต้องมี AWS Access Key ID และ AWS Secret Access Key ก่อน และถ้าเป็นการเชื่อมต่อแบบ temporary เราจะต้องใช้ AWS Session Token อีกค่าหนึ่งด้วย\n",
    "\n",
    "การที่เราจะได้มาทั้ง 3 ค่านั้น สามารถทำได้โดยไปที่ AWS Learner Lab ของคอร์สนี้ และที่ Terminal ให้เราพิมพ์คำสั่ง `cat ~/.aws/credentials` ลงไป เราจะได้ค่าทั้ง 3 ค่าที่เราต้องการมา ตามรูปด้านล่างนี้\n",
    "\n",
    "<img src=\"./img/getting-aws-keys.png\" width=\"800\" />"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ec8d4551-f1d6-4eb4-94fb-17934aff455f",
   "metadata": {},
   "outputs": [],
   "source": [
    "AWS_ACCESS_KEY_ID = \"YOUR_AWS_ACCESS_KEY_ID\"\n",
    "AWS_SECRET_ACCESS_KEY = \"YOUR_AWS_SECRET_ACCESS_KEY\"\n",
    "AWS_SESSION_TOKEN = \"YOUR_AWS_SESSION_TOKEN\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "3fac3cea-a64d-4ef2-a11c-b0ec4da7a099",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<pyspark.conf.SparkConf at 0x7fb66000af50>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "conf = SparkConf()\n",
    "conf.set(\"spark.jars.packages\", \"org.apache.hadoop:hadoop-aws:3.2.2\")\n",
    "conf.set(\"spark.hadoop.fs.s3a.aws.credentials.provider\", \"org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider\")\n",
    "conf.set(\"spark.hadoop.fs.s3a.access.key\", AWS_ACCESS_KEY_ID)\n",
    "conf.set(\"spark.hadoop.fs.s3a.secret.key\", AWS_SECRET_ACCESS_KEY)\n",
    "conf.set(\"spark.hadoop.fs.s3a.session.token\", AWS_SESSION_TOKEN)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "3eb72414-6c6d-4003-af2a-d4aa0f9eb776",
   "metadata": {},
   "outputs": [],
   "source": [
    "spark = SparkSession.builder.config(conf=conf).getOrCreate()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2fbd1ec1-edbc-44d0-baa6-01203980df44",
   "metadata": {},
   "source": [
    "ก่อนที่เราจะดึงข้อมูลจาก S3 ได้ เพื่อความงานในการทำโปรเจค เราจะเซต Bucket ของเราให้เป็นแบบ public access (ซึ่งตรงนี้ไม่ recommend ให้เอาไปใช้ในงานจริง เนื่องจากจะทำให้ข้อมูลขององค์กรรั่วไหลได้) ให้เราไปที่ Bucket ที่เก็บข้อมูลของเรา ที่ section \"Block public access (bucket settings)\" ให้เรากด Edit แล้วเอาติ๊กถูกออกที่ Block all public access ออก ตามรูปด้านล่าง แล้วเซฟ\n",
    "\n",
    "<img src=\"./img/open-public-access.png\" width=\"500\" />\n",
    "\n",
    "หลังจากนั้นเราต้องเซต Bucket policy เพิ่มเติมเพื่อกำหนดว่าจะให้ public access สามารถทำอะไรได้บ้าง ให้ไปที่ section \"Bucket policy\" แล้วกด Edit แล้วใส่ JSON ด้านล่างนี้ไปที่ช่อง Policy เสร็จแล้วกดเซฟ\n",
    "\n",
    "\n",
    "```json\n",
    "{\n",
    "    \"Version\": \"2012-10-17\",\n",
    "    \"Id\": \"Policy1670253933184\",\n",
    "    \"Statement\": [\n",
    "        {\n",
    "            \"Sid\": \"Stmt1670253929820\",\n",
    "            \"Effect\": \"Allow\",\n",
    "            \"Principal\": \"*\",\n",
    "            \"Action\": \"*\",\n",
    "            \"Resource\": \"arn:aws:s3:::kanouivirach-titanic/*\"\n",
    "        }\n",
    "    ]\n",
    "}\n",
    "```\n",
    "\n",
    "ผลลัพธ์ที่ได้จะมีหน้าตาคล้ายรูปด้านล่างแบบนี้\n",
    "\n",
    "<img src=\"./img/finish-setup-public-access.png\" width=\"500\" />"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c75a42f4-5f0f-4d85-9505-5adb435cc65f",
   "metadata": {},
   "source": [
    "หลังจากที่เซตเสร็จเรียบร้อยแล้ว ให้เราลองดึงข้อมูลที่เก็บอยู่ในรูปแบบ CSV จาก S3 โดยใช้คำสั่งประมาณนี้"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b3609a36-1ff1-446b-9493-362d330e2879",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = spark.read.csv(\"s3a://kanouivirach-titanic/landing/titanic.csv\", header=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "112d7f75-c6de-49a7-9c3e-364191d50491",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+-----------+--------+------+--------------------+------+----+-----+-----+----------------+-------+-----+--------+\n",
      "|PassengerId|Survived|Pclass|                Name|   Sex| Age|SibSp|Parch|          Ticket|   Fare|Cabin|Embarked|\n",
      "+-----------+--------+------+--------------------+------+----+-----+-----+----------------+-------+-----+--------+\n",
      "|          1|       0|     3|Braund, Mr. Owen ...|  male|  22|    1|    0|       A/5 21171|   7.25| null|       S|\n",
      "|          2|       1|     1|Cumings, Mrs. Joh...|female|  38|    1|    0|        PC 17599|71.2833|  C85|       C|\n",
      "|          3|       1|     3|Heikkinen, Miss. ...|female|  26|    0|    0|STON/O2. 3101282|  7.925| null|       S|\n",
      "|          4|       1|     1|Futrelle, Mrs. Ja...|female|  35|    1|    0|          113803|   53.1| C123|       S|\n",
      "|          5|       0|     3|Allen, Mr. Willia...|  male|  35|    0|    0|          373450|   8.05| null|       S|\n",
      "|          6|       0|     3|    Moran, Mr. James|  male|null|    0|    0|          330877| 8.4583| null|       Q|\n",
      "|          7|       0|     1|McCarthy, Mr. Tim...|  male|  54|    0|    0|           17463|51.8625|  E46|       S|\n",
      "|          8|       0|     3|Palsson, Master. ...|  male|   2|    3|    1|          349909| 21.075| null|       S|\n",
      "|          9|       1|     3|Johnson, Mrs. Osc...|female|  27|    0|    2|          347742|11.1333| null|       S|\n",
      "|         10|       1|     2|Nasser, Mrs. Nich...|female|  14|    1|    0|          237736|30.0708| null|       C|\n",
      "|         11|       1|     3|Sandstrom, Miss. ...|female|   4|    1|    1|         PP 9549|   16.7|   G6|       S|\n",
      "|         12|       1|     1|Bonnell, Miss. El...|female|  58|    0|    0|          113783|  26.55| C103|       S|\n",
      "|         13|       0|     3|Saundercock, Mr. ...|  male|  20|    0|    0|       A/5. 2151|   8.05| null|       S|\n",
      "|         14|       0|     3|Andersson, Mr. An...|  male|  39|    1|    5|          347082| 31.275| null|       S|\n",
      "|         15|       0|     3|Vestrom, Miss. Hu...|female|  14|    0|    0|          350406| 7.8542| null|       S|\n",
      "|         16|       1|     2|Hewlett, Mrs. (Ma...|female|  55|    0|    0|          248706|     16| null|       S|\n",
      "|         17|       0|     3|Rice, Master. Eugene|  male|   2|    4|    1|          382652| 29.125| null|       Q|\n",
      "|         18|       1|     2|Williams, Mr. Cha...|  male|null|    0|    0|          244373|     13| null|       S|\n",
      "|         19|       0|     3|Vander Planke, Mr...|female|  31|    1|    0|          345763|     18| null|       S|\n",
      "|         20|       1|     3|Masselmani, Mrs. ...|female|null|    0|    0|            2649|  7.225| null|       C|\n",
      "+-----------+--------+------+--------------------+------+----+-----+-----+----------------+-------+-----+--------+\n",
      "only showing top 20 rows\n",
      "\n"
     ]
    }
   ],
   "source": [
    "df.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "5b74bf67-0676-45c5-a633-29ec2918d82d",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.createOrReplaceTempView(\"titanic\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "179249e5-6ca2-400d-b676-647ad1677abf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "+--------------------+--------+\n",
      "|                name|survived|\n",
      "+--------------------+--------+\n",
      "|Braund, Mr. Owen ...|       0|\n",
      "|Cumings, Mrs. Joh...|       1|\n",
      "|Heikkinen, Miss. ...|       1|\n",
      "|Futrelle, Mrs. Ja...|       1|\n",
      "|Allen, Mr. Willia...|       0|\n",
      "|    Moran, Mr. James|       0|\n",
      "|McCarthy, Mr. Tim...|       0|\n",
      "|Palsson, Master. ...|       0|\n",
      "|Johnson, Mrs. Osc...|       1|\n",
      "|Nasser, Mrs. Nich...|       1|\n",
      "|Sandstrom, Miss. ...|       1|\n",
      "|Bonnell, Miss. El...|       1|\n",
      "|Saundercock, Mr. ...|       0|\n",
      "|Andersson, Mr. An...|       0|\n",
      "|Vestrom, Miss. Hu...|       0|\n",
      "|Hewlett, Mrs. (Ma...|       1|\n",
      "|Rice, Master. Eugene|       0|\n",
      "|Williams, Mr. Cha...|       1|\n",
      "|Vander Planke, Mr...|       0|\n",
      "|Masselmani, Mrs. ...|       1|\n",
      "+--------------------+--------+\n",
      "only showing top 20 rows\n",
      "\n"
     ]
    }
   ],
   "source": [
    "spark.sql(\"\"\"\n",
    "    select\n",
    "        name\n",
    "        , survived\n",
    "        \n",
    "    from\n",
    "        titanic\n",
    "\"\"\").show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3b66dc27-da72-48c6-89e1-ad7b90bb44a0",
   "metadata": {},
   "outputs": [],
   "source": [
    "table = spark.sql(\"\"\"\n",
    "    select\n",
    "        name\n",
    "        , survived\n",
    "        \n",
    "    from\n",
    "        titanic\n",
    "\"\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "982fb85a-2c5c-4e18-8936-55a8174f1219",
   "metadata": {},
   "outputs": [],
   "source": [
    "table.write.mode(\"overwrite\").csv(\"s3a://kanouivirach-titanic/titanic.parquet\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c28cfd73-893f-407b-9c5b-58b46c9d1cfc",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
